openapi: 3.0.1
info:
  title: eShopOnContainers - Catalog
  description: The Catalog Microservice HTTP API. This is a Data-Driven/CRUD microservice sample
  version: '1.0'
paths:
  /items:
    get:
      tags:
        - Catalog
      summary: /items - GET
      operationId: get-api-v1-catalog-items
      parameters:
        - name: pageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 10
        - name: pageIndex
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 0
        - name: ids
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogItem'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogItem'
              example:
                - id: 0
                  name: string
                  description: string
                  price: 0
                  pictureFileName: string
                  pictureUri: string
                  catalogTypeId: 0
                  catalogType:
                    id: 0
                    type: string
                  catalogBrandId: 0
                  catalogBrand:
                    id: 0
                    brand: string
                  availableStock: 0
                  restockThreshold: 0
                  maxStockThreshold: 0
                  onReorder: true
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogItem'
              example:
                - id: 0
                  name: string
                  description: string
                  price: 0
                  pictureFileName: string
                  pictureUri: string
                  catalogTypeId: 0
                  catalogType:
                    id: 0
                    type: string
                  catalogBrandId: 0
                  catalogBrand:
                    id: 0
                    brand: string
                  availableStock: 0
                  restockThreshold: 0
                  maxStockThreshold: 0
                  onReorder: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
    put:
      tags:
        - Catalog
      summary: /items - PUT
      operationId: put-api-v1-catalog-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
            example:
              id: 0
              name: string
              description: string
              price: 0
              pictureFileName: string
              pictureUri: string
              catalogTypeId: 0
              catalogType:
                id: 0
                type: string
              catalogBrandId: 0
              catalogBrand:
                id: 0
                brand: string
              availableStock: 0
              restockThreshold: 0
              maxStockThreshold: 0
              onReorder: true
          text/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
            example:
              id: 0
              name: string
              description: string
              price: 0
              pictureFileName: string
              pictureUri: string
              catalogTypeId: 0
              catalogType:
                id: 0
                type: string
              catalogBrandId: 0
              catalogBrand:
                id: 0
                brand: string
              availableStock: 0
              restockThreshold: 0
              maxStockThreshold: 0
              onReorder: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
            example:
              id: 0
              name: string
              description: string
              price: 0
              pictureFileName: string
              pictureUri: string
              catalogTypeId: 0
              catalogType:
                id: 0
                type: string
              catalogBrandId: 0
              catalogBrand:
                id: 0
                brand: string
              availableStock: 0
              restockThreshold: 0
              maxStockThreshold: 0
              onReorder: true
      responses:
        '201':
          description: Created
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
    post:
      tags:
        - Catalog
      summary: /items - POST
      operationId: post-api-v1-catalog-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
            example:
              id: 0
              name: string
              description: string
              price: 0
              pictureFileName: string
              pictureUri: string
              catalogTypeId: 0
              catalogType:
                id: 0
                type: string
              catalogBrandId: 0
              catalogBrand:
                id: 0
                brand: string
              availableStock: 0
              restockThreshold: 0
              maxStockThreshold: 0
              onReorder: true
          text/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
            example:
              id: 0
              name: string
              description: string
              price: 0
              pictureFileName: string
              pictureUri: string
              catalogTypeId: 0
              catalogType:
                id: 0
                type: string
              catalogBrandId: 0
              catalogBrand:
                id: 0
                brand: string
              availableStock: 0
              restockThreshold: 0
              maxStockThreshold: 0
              onReorder: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
            example:
              id: 0
              name: string
              description: string
              price: 0
              pictureFileName: string
              pictureUri: string
              catalogTypeId: 0
              catalogType:
                id: 0
                type: string
              catalogBrandId: 0
              catalogBrand:
                id: 0
                brand: string
              availableStock: 0
              restockThreshold: 0
              maxStockThreshold: 0
              onReorder: true
      responses:
        '201':
          description: Created
  '/items/{id}':
    get:
      tags:
        - Catalog
      summary: '/items/{id} - GET'
      operationId: get-api-v1-catalog-items-id
      parameters:
        - name: id
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogItem'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
              example:
                id: 0
                name: string
                description: string
                price: 0
                pictureFileName: string
                pictureUri: string
                catalogTypeId: 0
                catalogType:
                  id: 0
                  type: string
                catalogBrandId: 0
                catalogBrand:
                  id: 0
                  brand: string
                availableStock: 0
                restockThreshold: 0
                maxStockThreshold: 0
                onReorder: true
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
              example:
                id: 0
                name: string
                description: string
                price: 0
                pictureFileName: string
                pictureUri: string
                catalogTypeId: 0
                catalogType:
                  id: 0
                  type: string
                catalogBrandId: 0
                catalogBrand:
                  id: 0
                  brand: string
                availableStock: 0
                restockThreshold: 0
                maxStockThreshold: 0
                onReorder: true
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  '/items/withname/{name}':
    get:
      tags:
        - Catalog
      summary: '/items/withname/{name} - GET'
      operationId: get-api-v1-catalog-items-withname-name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            minLength: 1
            type: string
        - name: pageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 10
        - name: pageIndex
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                data:
                  - id: 0
                    name: string
                    description: string
                    price: 0
                    pictureFileName: string
                    pictureUri: string
                    catalogTypeId: 0
                    catalogType:
                      id: 0
                      type: string
                    catalogBrandId: 0
                    catalogBrand:
                      id: 0
                      brand: string
                    availableStock: 0
                    restockThreshold: 0
                    maxStockThreshold: 0
                    onReorder: true
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                data:
                  - id: 0
                    name: string
                    description: string
                    price: 0
                    pictureFileName: string
                    pictureUri: string
                    catalogTypeId: 0
                    catalogType:
                      id: 0
                      type: string
                    catalogBrandId: 0
                    catalogBrand:
                      id: 0
                      brand: string
                    availableStock: 0
                    restockThreshold: 0
                    maxStockThreshold: 0
                    onReorder: true
  '/items/type/{catalogTypeId}/brand/{catalogBrandId}':
    get:
      tags:
        - Catalog
      summary: '/items/type/{catalogTypeId}/brand/{catalogBrandId} - GET'
      operationId: get-api-v1-catalog-items-type-catalogtypeid-brand-catalogbrandid
      parameters:
        - name: catalogTypeId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
        - name: catalogBrandId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 10
        - name: pageIndex
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                data:
                  - id: 0
                    name: string
                    description: string
                    price: 0
                    pictureFileName: string
                    pictureUri: string
                    catalogTypeId: 0
                    catalogType:
                      id: 0
                      type: string
                    catalogBrandId: 0
                    catalogBrand:
                      id: 0
                      brand: string
                    availableStock: 0
                    restockThreshold: 0
                    maxStockThreshold: 0
                    onReorder: true
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                data:
                  - id: 0
                    name: string
                    description: string
                    price: 0
                    pictureFileName: string
                    pictureUri: string
                    catalogTypeId: 0
                    catalogType:
                      id: 0
                      type: string
                    catalogBrandId: 0
                    catalogBrand:
                      id: 0
                      brand: string
                    availableStock: 0
                    restockThreshold: 0
                    maxStockThreshold: 0
                    onReorder: true
  '/items/type/all/brand/{catalogBrandId}':
    get:
      tags:
        - Catalog
      summary: '/items/type/all/brand/{catalogBrandId} - GET'
      operationId: get-api-v1-catalog-items-type-all-brand-catalogbrandid
      parameters:
        - name: catalogBrandId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 10
        - name: pageIndex
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                data:
                  - id: 0
                    name: string
                    description: string
                    price: 0
                    pictureFileName: string
                    pictureUri: string
                    catalogTypeId: 0
                    catalogType:
                      id: 0
                      type: string
                    catalogBrandId: 0
                    catalogBrand:
                      id: 0
                      brand: string
                    availableStock: 0
                    restockThreshold: 0
                    maxStockThreshold: 0
                    onReorder: true
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogItemPaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                data:
                  - id: 0
                    name: string
                    description: string
                    price: 0
                    pictureFileName: string
                    pictureUri: string
                    catalogTypeId: 0
                    catalogType:
                      id: 0
                      type: string
                    catalogBrandId: 0
                    catalogBrand:
                      id: 0
                      brand: string
                    availableStock: 0
                    restockThreshold: 0
                    maxStockThreshold: 0
                    onReorder: true
  /catalogtypes:
    get:
      tags:
        - Catalog
      summary: /catalogtypes - GET
      operationId: get-api-v1-catalog-catalogtypes
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogType'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogType'
              example:
                - id: 0
                  type: string
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogType'
              example:
                - id: 0
                  type: string
  /catalogbrands:
    get:
      tags:
        - Catalog
      summary: /catalogbrands - GET
      operationId: get-api-v1-catalog-catalogbrands
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBrand'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBrand'
              example:
                - id: 0
                  brand: string
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBrand'
              example:
                - id: 0
                  brand: string
  '/{id}':
    delete:
      tags:
        - Catalog
      summary: '/{id} - DELETE'
      operationId: delete-api-v1-catalog-id
      parameters:
        - name: id
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  '/items/{catalogItemId}/pic':
    get:
      tags:
        - Pic
      summary: '/items/{catalogItemId}/pic - GET'
      operationId: get-api-v1-catalog-items-catalogitemid-pic
      parameters:
        - name: catalogItemId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '404':
          description: Not Found
components:
  schemas:
    CatalogBrand:
      type: object
      properties:
        id:
          type: integer
          format: int32
        brand:
          type: string
          nullable: true
      additionalProperties: false
    CatalogItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
        pictureFileName:
          type: string
          nullable: true
        pictureUri:
          type: string
          nullable: true
        catalogTypeId:
          type: integer
          format: int32
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogBrandId:
          type: integer
          format: int32
        catalogBrand:
          $ref: '#/components/schemas/CatalogBrand'
        availableStock:
          type: integer
          format: int32
        restockThreshold:
          type: integer
          format: int32
        maxStockThreshold:
          type: integer
          format: int32
        onReorder:
          type: boolean
      additionalProperties: false
    CatalogItemPaginatedItemsViewModel:
      type: object
      properties:
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        count:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: '#/components/schemas/CatalogItem'
          nullable: true
      additionalProperties: false
    CatalogType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]