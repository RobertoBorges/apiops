<policies>
	<inbound>
		<base />
		<set-variable name="queue_or_topic" value="@(context.Request.MatchedParameters["queue_or_topic"])" />
		<set-variable name="label" value="@(context.Request.MatchedParameters["label"])" />
		<set-header name="BrokerProperties" exists-action="override">
			<value>@{
                     var json = new JObject();
                     json.Add("MessageId", context.RequestId);
                     json.Add("Label", (string)context.Variables["label"]);
                     return json.ToString(Newtonsoft.Json.Formatting.None);
            }</value>
		</set-header>
		<set-backend-service base-url="https://{{srvicebussas}}.servicebus.windows.net" />
		<rewrite-uri template="@("/" + (string)context.Variables["queue_or_topic"] +"/messages" )" copy-unmatched-params="false" />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
		<choose>
			<when condition="@(context.Response.StatusCode == 201)">
				<set-header name="Content-Type" exists-action="override">
					<value>application/json</value>
				</set-header>
				<set-body>@{  
                        var json = new JObject() {{"RequestId", context.RequestId}} ;  
                        return json.ToString(Newtonsoft.Json.Formatting.None);       
 }</set-body>
			</when>
		</choose>
	</outbound>
	<on-error>
		<base />
		<set-variable name="errorMessage" value="@{
            return new JObject(
                new JProperty("EventTime", DateTime.UtcNow.ToString()),
                new JProperty("ErrorMessage", context.LastError.Message),
                new JProperty("ErrorReason", context.LastError.Reason),
                new JProperty("ErrorSource", context.LastError.Source),
                new JProperty("ErrorScope", context.LastError.Scope),
                new JProperty("ErrorSection", context.LastError.Section)
 
            ).ToString();
        }" />
		<return-response>
			<set-status code="500" reason="Error" />
			<set-header name="Content-Type" exists-action="override">
				<value>application/json</value>
			</set-header>
			<set-body>@((string)context.Variables["errorMessage"])</set-body>
		</return-response>
	</on-error>
</policies>