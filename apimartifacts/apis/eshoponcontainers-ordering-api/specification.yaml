openapi: 3.0.1
info:
  title: eShopOnContainers - Ordering
  description: The Ordering Service HTTP API
  version: '1.0'
servers:
  - url: http://apim-bob-dev-eastus-001.azure-api.net/Orders
  - url: https://apim-bob-dev-eastus-001.azure-api.net/Orders
paths:
  /cancel:
    put:
      tags:
        - Orders
      summary: /cancel - PUT
      operationId: put-api-v1-orders-cancel
      parameters:
        - name: x-requestid
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderCommand'
            example:
              orderNumber: 0
          text/json:
            schema:
              $ref: '#/components/schemas/CancelOrderCommand'
            example:
              orderNumber: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/CancelOrderCommand'
            example:
              orderNumber: 0
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /ship:
    put:
      tags:
        - Orders
      summary: /ship - PUT
      operationId: put-api-v1-orders-ship
      parameters:
        - name: x-requestid
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipOrderCommand'
            example:
              orderNumber: 0
          text/json:
            schema:
              $ref: '#/components/schemas/ShipOrderCommand'
            example:
              orderNumber: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/ShipOrderCommand'
            example:
              orderNumber: 0
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/{orderId}':
    get:
      tags:
        - Orders
      summary: '/{orderId} - GET'
      operationId: get-api-v1-orders-orderid
      parameters:
        - name: orderId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                ordernumber: 0
                date: string
                status: string
                description: string
                street: string
                city: string
                zipcode: string
                country: string
                orderitems:
                  - productname: string
                    units: 0
                    unitprice: 0
                    pictureurl: string
                total: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                ordernumber: 0
                date: string
                status: string
                description: string
                street: string
                city: string
                zipcode: string
                country: string
                orderitems:
                  - productname: string
                    units: 0
                    unitprice: 0
                    pictureurl: string
                total: 0
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /:
    get:
      tags:
        - Orders
      summary: / - GET
      operationId: get-api-v1-orders
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSummary'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSummary'
              example:
                - ordernumber: 0
                  date: string
                  status: string
                  total: 0
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSummary'
              example:
                - ordernumber: 0
                  date: string
                  status: string
                  total: 0
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /cardtypes:
    get:
      tags:
        - Orders
      summary: /cardtypes - GET
      operationId: get-api-v1-orders-cardtypes
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardType'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardType'
              example:
                - id: 0
                  name: string
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardType'
              example:
                - id: 0
                  name: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /draft:
    post:
      tags:
        - Orders
      summary: /draft - POST
      operationId: post-api-v1-orders-draft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDraftCommand'
            example:
              buyerId: string
              items:
                - id: string
                  productId: 0
                  productName: string
                  unitPrice: 0
                  oldUnitPrice: 0
                  quantity: 0
                  pictureUrl: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDraftCommand'
            example:
              buyerId: string
              items:
                - id: string
                  productId: 0
                  productName: string
                  unitPrice: 0
                  oldUnitPrice: 0
                  quantity: 0
                  pictureUrl: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderDraftCommand'
            example:
              buyerId: string
              items:
                - id: string
                  productId: 0
                  productName: string
                  unitPrice: 0
                  oldUnitPrice: 0
                  quantity: 0
                  pictureUrl: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderDraftDTO'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDraftDTO'
              example:
                orderItems:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    discount: 0
                    units: 0
                    pictureUrl: string
                total: 0
            text/json:
              schema:
                $ref: '#/components/schemas/OrderDraftDTO'
              example:
                orderItems:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    discount: 0
                    units: 0
                    pictureUrl: string
                total: 0
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/postsvcbus/{queue_or_topic}/{label}':
    post:
      summary: /postsvcbus
      operationId: postsvcbus
      parameters:
        - name: queue_or_topic
          in: path
          description: Name of the Queue or Topic in Service Bus
          required: true
          schema:
            type: ''
        - name: label
          in: path
          description: Label to be added on the message
          required: true
          schema:
            type: ''
      responses:
        '200':
          description: 
  '/processeditem/{RowKey}':
    get:
      summary: '/processeditem/{RowKey}'
      operationId: processeditem
      parameters:
        - name: RowKey
          in: path
          required: true
          schema:
            type: ''
      responses:
        '200':
          description: 
  /getitemfromservicebus:
    get:
      summary: /getitemfromservicebus
      operationId: getitemfromservicebus
      responses:
        '200':
          description: 
components:
  schemas:
    BasketItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        oldUnitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      additionalProperties: false
    CancelOrderCommand:
      type: object
      properties:
        orderNumber:
          type: integer
          format: int32
      additionalProperties: false
    CardType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    CreateOrderDraftCommand:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
          nullable: true
      additionalProperties: false
    Order:
      type: object
      properties:
        ordernumber:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        status:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        orderitems:
          type: array
          items:
            $ref: '#/components/schemas/Orderitem'
          nullable: true
        total:
          type: number
          format: double
      additionalProperties: false
    OrderDraftDTO:
      type: object
      properties:
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemDTO'
          nullable: true
        total:
          type: number
          format: double
      additionalProperties: false
    OrderItemDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        discount:
          type: number
          format: double
        units:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      additionalProperties: false
    OrderSummary:
      type: object
      properties:
        ordernumber:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        status:
          type: string
          nullable: true
        total:
          type: number
          format: double
      additionalProperties: false
    Orderitem:
      type: object
      properties:
        productname:
          type: string
          nullable: true
        units:
          type: integer
          format: int32
        unitprice:
          type: number
          format: double
        pictureurl:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ShipOrderCommand:
      type: object
      properties:
        orderNumber:
          type: integer
          format: int32
      additionalProperties: false
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]