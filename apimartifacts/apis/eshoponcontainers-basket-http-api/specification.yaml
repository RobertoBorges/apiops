openapi: 3.0.1
info:
  title: eShopOnContainers - Basket
  description: The Basket Service HTTP API
  version: '1.0'
paths:
  '/{id}':
    get:
      tags:
        - Basket
      summary: '/{id} - GET'
      operationId: get-api-v1-basket-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - id: string
                    productId: 0
                    productName: string
                    unitPrice: 0
                    oldUnitPrice: 0
                    quantity: 0
                    pictureUrl: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - id: string
                    productId: 0
                    productName: string
                    unitPrice: 0
                    oldUnitPrice: 0
                    quantity: 0
                    pictureUrl: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - Basket
      summary: '/{id} - DELETE'
      operationId: delete-api-v1-basket-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /:
    post:
      tags:
        - Basket
      summary: / - POST
      operationId: post-api-v1-basket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBasket'
            example:
              buyerId: string
              items:
                - id: string
                  productId: 0
                  productName: string
                  unitPrice: 0
                  oldUnitPrice: 0
                  quantity: 0
                  pictureUrl: string
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerBasket'
            example:
              buyerId: string
              items:
                - id: string
                  productId: 0
                  productName: string
                  unitPrice: 0
                  oldUnitPrice: 0
                  quantity: 0
                  pictureUrl: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerBasket'
            example:
              buyerId: string
              items:
                - id: string
                  productId: 0
                  productName: string
                  unitPrice: 0
                  oldUnitPrice: 0
                  quantity: 0
                  pictureUrl: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - id: string
                    productId: 0
                    productName: string
                    unitPrice: 0
                    oldUnitPrice: 0
                    quantity: 0
                    pictureUrl: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - id: string
                    productId: 0
                    productName: string
                    unitPrice: 0
                    oldUnitPrice: 0
                    quantity: 0
                    pictureUrl: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /checkout:
    post:
      tags:
        - Basket
      summary: /checkout - POST
      operationId: post-api-v1-basket-checkout
      parameters:
        - name: x-requestid
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketCheckout'
            example:
              city: string
              street: string
              state: string
              country: string
              zipCode: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityNumber: string
              cardTypeId: 0
              buyer: string
              requestId: string
          text/json:
            schema:
              $ref: '#/components/schemas/BasketCheckout'
            example:
              city: string
              street: string
              state: string
              country: string
              zipCode: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityNumber: string
              cardTypeId: 0
              buyer: string
              requestId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/BasketCheckout'
            example:
              city: string
              street: string
              state: string
              country: string
              zipCode: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityNumber: string
              cardTypeId: 0
              buyer: string
              requestId: string
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  schemas:
    BasketCheckout:
      type: object
      properties:
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        cardNumber:
          type: string
          nullable: true
        cardHolderName:
          type: string
          nullable: true
        cardExpiration:
          type: string
          format: date-time
        cardSecurityNumber:
          type: string
          nullable: true
        cardTypeId:
          type: integer
          format: int32
        buyer:
          type: string
          nullable: true
        requestId:
          type: string
          format: uuid
      additionalProperties: false
    BasketItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        oldUnitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        pictureUrl:
          type: string
          nullable: true
      additionalProperties: false
    CustomerBasket:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]